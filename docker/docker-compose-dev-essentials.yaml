networks:
  unstract-network:
    name: unstract-network

services:
  db:
    image: "pgvector/pgvector:pg15"
    container_name: unstract-db
    restart: unless-stopped
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./scripts/db-setup/db_setup.sh:/docker-entrypoint-initdb.d/db_setup.sh
    env_file:
      - ./essentials.env
    labels:
      - traefik.enable=false
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U unstract_dev -d unstract_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - unstract-network

  redis:
    image: "redis:7.2.3"
    container_name: unstract-redis
    restart: unless-stopped
    # uncomment below command if persistance required.
    #command: redis-server --save 20 1 --loglevel warning --
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    labels:
      - traefik.enable=false
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - unstract-network

  minio:
    image: "minio/minio:latest"
    container_name: unstract-minio
    hostname: minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    env_file:
      - ./essentials.env
    command: server /data --console-address ":9001"
    labels:
      - traefik.enable=true
      - traefik.http.routers.minio.rule=Host(`minio.unstract.localhost`)
      - traefik.http.services.minio.loadbalancer.server.port=9001

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc alias set minio http://unstract-minio:9000 minio minio123;
      mc mb minio/unstract;
      mc mirror /app/prompt-studio-data minio/unstract/prompt-studio-data;
      exit 0;
      "
    volumes:
      - prompt_studio_data:/app/prompt-studio-data

  reverse-proxy:
    image: traefik:v2.10
    container_name: unstract-proxy
    restart: unless-stopped
    command: --api.insecure=true
      --accesslog=true --log.level=INFO
      --providers.docker=true --providers.docker.network=unstract-network
      --providers.file.filename=/proxy_overrides.yaml --providers.file.watch=true
      --entrypoints.web.address=:80
      --providers.docker.exposedbydefault=false
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./proxy_overrides.yaml:/proxy_overrides.yaml
    networks:
      - unstract-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  feature-flag:
    image: flipt/flipt:v1.34.0 # Dated(05/01/2024) Latest stable version. Ref:https://github.com/flipt-io/flipt/releases
    container_name: unstract-flipt
    restart: unless-stopped
    ports: # Forwarded to available host ports
      - "8082:8080" # REST API port
      - "9005:9000" # gRPC port
    # https://www.flipt.io/docs/configuration/overview#environment-variables)
    # https://www.flipt.io/docs/configuration/overview#configuration-parameters
    env_file:
      - ./essentials.env
    environment:
      FLIPT_CACHE_ENABLED: true
    labels:
      - traefik.enable=true
      - traefik.http.routers.feature-flag.rule=Host(`feature-flag.unstract.localhost`)
      - traefik.http.services.feature-flag.loadbalancer.server.port=8080

  unstructured-io:
    profiles:
      - optional
    image: downloads.unstructured.io/unstructured-io/unstructured-api:0.0.61
    container_name: unstract-unstructured-io
    restart: unless-stopped
    ports: # Forwarded to available host ports
      - "8083:8000"
    labels:
      - traefik.enable=false

  qdrant:
    # Vector DB for doc indexer
    image: "qdrant/qdrant:v1.8.3"
    container_name: unstract-vector-db
    restart: unless-stopped
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/var/lib/qdrant/data/
    labels:
      - traefik.enable=false
    env_file:
      - ./essentials.env

volumes:
  flipt_data:
  minio_data:
  postgres_data:
  qdrant_data:
  redis_data:
  prompt_studio_data:
